@page "/{PostUrl}"

@using Blog.Core.DTO;
@inject ILogger<PostReader> logger
@inject NavigationManager NavigationManager

<h1>@FetchedPost.Title</h1>
<p>@FetchedPost.Content</p>

<h6>Comments:</h6>
<Virtualize Items="@FetchedPost.CommentContents" Context="comment">
    <div class="card mb-3">
        <div class="card-body">
            <p class="card-text">@comment</p>
        </div>
    </div>
</Virtualize>


<CommentForm ConnectedItem="@FetchedPost"></CommentForm>

@code {

    [Parameter]
    public string PostUrl { get; set; }

    public PostDto FetchedPost { get; set; }

    [Inject]
    private HttpClient HttpClient { get; set; }

    private List<PostDto> posts = new List<PostDto>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await FetchPostAsync();
        }
        catch (Exception ex)
        {
            logger.LogError(ex, "an error occurred");
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        await FetchPostAsync();
    }

    protected async Task FetchPostAsync()
    {
        try
        {
            //todo: replace with a more specific call so that api doesn't have to fetch entire list of posts from db
            var result = await HttpClient.GetFromJsonAsync<List<PostDto>>("api/Posts");
            if (result != default)
            {
                var posts = result.ToList();
                FetchedPost = posts.First(p => p.Url.Equals(PostUrl));
            }
        }
        catch (Exception ex)
        {
            logger.LogError(ex, "an error occurred while trying to fetch the post.");
        }
    }



}